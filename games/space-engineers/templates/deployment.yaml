apiVersion: apps/v1
kind: Deployment
metadata:
  name: space-engineers
  labels:
    app: space-engineers
spec:
  replicas: 1
  revisionHistoryLimit: 3
  progressDeadlineSeconds: 600
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: space-engineers
  template:
    metadata:
      labels:
        app: space-engineers
    spec:
      {{ if .Values.deployment.nodeaffinity.enabled }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - {{ .Values.deployment.nodeaffinity.node}}
      {{ end }}
      containers:
        - name: game
          image: {{ .Values.deployment.image.location }}:{{ .Values.deployment.image.tag }}
          imagePullPolicy: IfNotPresent
          {{ if .Values.deployment.sleepStart }}
          # Just spin & wait forever
          command: [ "/bin/bash", "-c", "--" ]
          args: [ "while true; do sleep 30; done;" ]
          {{ end }}
          env:
            - name: WINEDEBUG
              value: "{{ .Values.deployment.env.winedebug}}"
            - name: INSTANCE_NAME
              value: "{{ .Values.deployment.env.instanceName}}"
            - name: PUBLIC_IP
              value: "{{ .Values.deployment.env.publicIp}}"
          volumeMounts:
            - mountPath: /data/world
              name: data
          ports:
            - containerPort: 27016
              protocol: UDP
          {{ if .Values.deployment.resources.enabled}}
          resources:
            limits:
              memory: "{{ .Values.resources.limits.memory}}"Mi
            requests:
              memory: "{{ .Values.resources.requests.memory}}"Mi
      volumes:
        - name: steamcmd
          persistentVolumeClaim:
            claimName: data-steamcmd
        - name: instances
          persistentVolumeClaim:
            claimName: data-instances
        - name: plugins
          persistentVolumeClaim:
            claimName: data-plugins
        - name: dedicated
          persistentVolumeClaim:
            claimName: data-dedicated
