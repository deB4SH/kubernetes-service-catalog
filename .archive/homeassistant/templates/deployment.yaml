apiVersion: apps/v1
kind: Deployment
metadata:
  name: homeassistant
  labels:
    app: homeassistant
spec:
  replicas: 1
  revisionHistoryLimit: 3
  progressDeadlineSeconds: 600
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: homeassistant
  template:
    metadata:
      labels:
        app: homeassistant
      annotations:
        checksum/configuration: {{ include (print $.Template.BasePath "/settings.yaml") . | sha256sum }}
    spec:
      {{- if .Values.deployment.hostNetwork }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      {{- if .Values.deployment.nodeSelector.enabled }}
      nodeSelector:
        kubernetes.io/hostname: {{.Values.deployment.nodeSelector.nodeName}}
      {{- end }}
      containers:
        - name: homeassistant
          image: {{.Values.deployment.image.location}}:{{.Values.deployment.image.tag}}
          imagePullPolicy: IfNotPresent
          {{ if .Values.deployment.sleepStart }}
          # Just spin & wait forever
          command: [ "/bin/bash", "-c", "--" ]
          args: [ "while true; do sleep 30; done;" ]
          {{ end }}
          {{ if .Values.deployment.securityPrivilegeEscalation }}
          securityContext:
            allowPrivilegeEscalation: false
          {{ end }}
          volumeMounts:
            - mountPath: "/config"
              name: data
            - mountPath: "/config/configuration.yaml"
              subPath: "configuration.yaml"
              name: config
          ports:
            - containerPort: 8123
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data
        - name: config
          configMap:
            name: settings
