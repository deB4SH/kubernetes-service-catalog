apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Release.Name}}
  labels:
    app: {{.Release.Name}}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  progressDeadlineSeconds: 600
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{.Release.Name}}
  template:
    metadata:
      labels:
        app: {{.Release.Name}}
    spec:
      containers:
        - name: {{.Release.Name}}
          image: {{ .Values.deployment.image.location }}:{{ .Values.deployment.image.tag }}
          imagePullPolicy: IfNotPresent
          {{ if .Values.deployment.sleepStart }}
          # Just spin & wait forever
          command: [ "/bin/bash", "-c", "--" ]
          args: [ "while true; do sleep 30; done;" ]
          {{ end }}
          securityContext: #required due to hostpath mounts
            privileged: true
          env:
            - name: TZ
              value: Europe/Berlin
            - name: ZIGBEE2MQTT_DATA
              value: /data
          resources:
            limits:
              cpu: {{ .Values.deployment.resources.limits.cpu }}m
              memory: {{ .Values.deployment.resources.limits.memory }}M
            requests:
              cpu: {{ .Values.deployment.resources.requests.cpu }}m
              memory: {{ .Values.deployment.resources.requests.memory }}M
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /data
            - name: usb
              mountPath: {{ .Values.deployment.volume.usb }}
            # config-map configuration
            - name: zigbee2mqtt-settings
              mountPath: /app/configuration.yaml
              subPath: configuration.yaml
      volumes:
        - name: zigbee2mqtt-settings
          configMap:
            name: {{.Release.Name}}-configuration
        - name: data
          persistentVolumeClaim:
            claimName: {{.Release.Name}}-data
        - name: usb
          hostPath:
            path: {{ .Values.deployment.volume.usb }}
        
        
